installCRDs: true
keepCRDs: true

clusterInstall: true

controller:
  notifications:
    enabled: true
    slack-token: thisIsNotTheToken
    templates:
      rolloutCompleted: |
        message: Rollout {{.rollout.metadata.name}} has been completed.
        email:
          subject: Rollout {{.rollout.metadata.name}} has been completed.
        slack:
          attachments: |
              [{
                "title": "{{ .rollout.metadata.name}}",
                "color": "#18be52",
                "fields": [
                {
                  "title": "Strategy",
                  "value": "{{if .rollout.spec.strategy.blueGreen}}BlueGreen{{end}}{{if .rollout.spec.strategy.canary}}Canary{{end}}",
                  "short": true
                }
                {{range $index, $c := .rollout.spec.template.spec.containers}}
                  {{if not $index}},{{end}}
                  {{if $index}},{{end}}
                  {
                    "title": "{{$c.name}}",
                    "value": "{{$c.image}}",
                    "short": true
                  }
                {{end}}
                ]
              }]

      rolloutStepCompleted: |
        message: Rollout {{.rollout.metadata.name}} step number {{ add .rollout.status.currentStepIndex 1}}/{{len .rollout.spec.strategy.canary.steps}} has been completed.
        email:
          subject: Rollout {{.rollout.metadata.name}} step number {{ add .rollout.status.currentStepIndex 1}}/{{len .rollout.spec.strategy.canary.steps}} has been completed.
        slack:
          attachments: |
              [{
                "title": "{{ .rollout.metadata.name}}",
                "color": "#18be52",
                "fields": [
                {
                  "title": "Strategy",
                  "value": "{{if .rollout.spec.strategy.blueGreen}}BlueGreen{{end}}{{if .rollout.spec.strategy.canary}}Canary{{end}}",
                  "short": true
                },
                {
                  "title": "Step completed",
                  "value": "{{add .rollout.status.currentStepIndex 1}}/{{len .rollout.spec.strategy.canary.steps}}",
                  "short": true
                }
                {{range $index, $c := .rollout.spec.template.spec.containers}}
                  {{if not $index}},{{end}}
                  {{if $index}},{{end}}
                  {
                    "title": "{{$c.name}}",
                    "value": "{{$c.image}}",
                    "short": true
                  }
                {{end}}
                ]
              }]
      rolloutUpdated: |
        message: Rollout {{.rollout.metadata.name}} has been updated.
        email:
          subject: Rollout {{.rollout.metadata.name}} has been updated.
        slack:
          attachments: |
              [{
                "title": "{{ .rollout.metadata.name}}",
                "color": "#18be52",
                "fields": [
                {
                  "title": "Strategy",
                  "value": "{{if .rollout.spec.strategy.blueGreen}}BlueGreen{{end}}{{if .rollout.spec.strategy.canary}}Canary{{end}}",
                  "short": true
                }
                {{range $index, $c := .rollout.spec.template.spec.containers}}
                  {{if not $index}},{{end}}
                  {{if $index}},{{end}}
                  {
                    "title": "{{$c.name}}",
                    "value": "{{$c.image}}",
                    "short": true
                  }
                {{end}}
                ]
              }]
      scalingReplicaset: |
        message: Scaling Rollout {{.rollout.metadata.name}}'s replicaset to {{.rollout.spec.replicas}}.
        email:
          subject: Scaling Rollout {{.rollout.metadata.name}}'s replcaset to {{.rollout.spec.replicas}}.
        slack:
          attachments: |
              [{
                "title": "{{ .rollout.metadata.name}}",
                "color": "#18be52",
                "fields": [
                {
                  "title": "Strategy",
                  "value": "{{if .rollout.spec.strategy.blueGreen}}BlueGreen{{end}}{{if .rollout.spec.strategy.canary}}Canary{{end}}",
                  "short": true
                },
                {
                  "title": "Desired replica",
                  "value": "{{.rollout.spec.replicas}}",
                  "short": true
                },
                {
                  "title": "Updated replicas",
                  "value": "{{.rollout.status.updatedReplicas}}",
                  "short": true
                }
                {{range $index, $c := .rollout.spec.template.spec.containers}}
                  {{if not $index}},{{end}}
                  {{if $index}},{{end}}
                  {
                    "title": "{{$c.name}}",
                    "value": "{{$c.image}}",
                    "short": true
                  }
                {{end}}
                ]
              }]
      triggerOnRolloutCompleted: |
        - send: [rollout-completed]
      triggerOnRolloutStepCompleted: |
        - send: [rollout-step-completed]
      triggerOnRolloutUpdated: |
        - send: [rollout-updated]
      triggerOnScalingReplicaset: |
        - send: [scaling-replicaset]

  component: rollouts-controller
  ## Node selectors and tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  nodeSelector: {}
  tolerations: []
  affinity: {}
  image:
    registry: quay.io
    repository: argoproj/argo-rollouts
    tag: ""
    pullPolicy: IfNotPresent

  ## Additional command line arguments to pass to rollouts-controller
  ##
  extraArgs: []

  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 50m
  #    memory: 64Mi

  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
      additionalLabels: {}
      additionalAnnotations: {}

  ## Readiness and liveness probes for rollouts controller
  livenessProbe:
    httpGet:
      path: /metrics
      port: 8090
    initialDelaySeconds: 30
    periodSeconds: 20
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 10
  readinessProbe:
    httpGet:
      path: /metrics
      port: 8090
    initialDelaySeconds: 15
    periodSeconds: 5
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 4

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## Annotations to be added to all CRDs
##
crdAnnotations: {}

## Annotations to be added to the Rollout pods
##
podAnnotations: {}

## Security Context to set on pod level
##
podSecurityContext:
  runAsNonRoot: true

## Security Context to set on container level
##
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## Annotations to be added to the Rollout service
##
serviceAnnotations: {}

## Labels to be added to the Rollout pods
##
podLabels: {}

# Secrets with credentials to pull images from a private registry
imagePullSecrets: []
# - name: argo-pull-secret

dashboard:
  enabled: false
  component: rollouts-dashboard
  ## Node selectors and tolerations for server scheduling to nodes with taints
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  ##
  nodeSelector: {}
  tolerations: []
  affinity: {}
  image:
    registry: quay.io
    repository: argoproj/kubectl-argo-rollouts
    tag: ""
    pullPolicy: IfNotPresent
  ## Additional command line arguments to pass to rollouts-dashboard
  ##
  extraArgs: []
  resources: {}
  podSecurityContext:
    runAsNonRoot: true
  containerSecurityContext: {}
  serviceAccount:
    create: true
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

cluster_analysis_template: no
