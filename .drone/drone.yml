---
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: pr
steps:
- commands:
  - go test ./...
  image: golang:1.17
  name: test
  settings: {}
- commands:
  - scripts/build-drone-utilities.sh
  - go test -coverprofile=coverage.out ./...
  - .drone/coverage > coverage_report.out
  - scripts/generate-lint-report.sh
  - cat coverage_report.out > report.out
  - echo "" >> report.out
  - cat lint.out >> report.out
  - .drone/ghcomment -i "Go coverage report:" -b report.out
  environment:
    GRAFANABOT_PAT:
      from_secret: gh_token
  image: golangci/golangci-lint:v1.45
  name: coverage + lint
  settings: {}
- commands:
  - DOCKER_TAG=$(bash scripts/generate-tags.sh)
  - if test "${DRONE_SOURCE_BRANCH}" = "master"; then echo -n "$${DOCKER_TAG},latest"
    > .tags; else echo -n "$${DOCKER_TAG}" > .tags; fi
  - tail -n +1 .tags
  image: golang:1.17
  name: generate tags
  settings: {}
- commands: []
  image: plugins/gcr
  name: build + push
  settings:
    json_key:
      from_secret: gcr_admin
    registry: us.gcr.io
    repo: kubernetes-dev/influx2cortex
trigger:
  event:
    include:
    - pull_request
type: docker
---
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: main
steps:
- commands:
  - go test ./...
  image: golang:1.17
  name: test
  settings: {}
- commands:
  - DOCKER_TAG=$(bash scripts/generate-tags.sh)
  - if test "${DRONE_SOURCE_BRANCH}" = "master"; then echo -n "$${DOCKER_TAG},latest"
    > .tags; else echo -n "$${DOCKER_TAG}" > .tags; fi
  - tail -n +1 .tags
  image: golang:1.17
  name: generate tags
  settings: {}
- commands: []
  image: plugins/gcr
  name: build + push
  settings:
    json_key:
      from_secret: gcr_admin
    registry: us.gcr.io
    repo: kubernetes-dev/influx2cortex
trigger:
  branch:
  - main
  event:
    include:
    - push
type: docker
---
get:
  name: .dockerconfigjson
  path: secret/data/common/gcr
kind: secret
name: dockerconfigjson
---
get:
  name: pat
  path: infra/data/ci/github/grafanabot
kind: secret
name: gh_token
---
get:
  name: service-account
  path: infra/data/ci/gcr-admin
kind: secret
name: gcr_admin
---
kind: signature
hmac: 91b958d45616383e56cc63b6dd6a628db6dd9f6e8c2bca6fbe6ac63dc3d9b4cf

...
